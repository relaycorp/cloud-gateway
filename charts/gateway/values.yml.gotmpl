image:
  repository: relaycorp/gateway-test
  tag: parcel-delivery-debug-12

fullnameOverride: public-gateway

gatewayKeyId: {{ requiredEnv "GW_KEY_ID_B64" | quote }}

logLevel: debug

proxyRequestIdHeader: X-Cloud-Trace-Context

ingress:
  enabled: true
  apiVersion: networking.k8s.io/v1beta1
  enableTls: true
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.global-static-ip-name: {{ requiredEnv "GW_GLOBAL_IP_NAME" | quote }}
    networking.gke.io/managed-certificates: {{ requiredEnv "GW_MANAGED_CERT_NAME" | quote }}
  serviceDomains:
    poweb: {{ requiredEnv "GW_POWEB_DOMAIN" | quote }}
    pohttp: {{ requiredEnv "GW_POHTTP_DOMAIN" | quote }}
    cogrpc: {{ requiredEnv "GW_COGRPC_DOMAIN" | quote }}

service:
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  type: NodePort

poweb:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ poweb ]
            topologyKey: "kubernetes.io/hostname"
          weight: 80
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ poweb ]
            topologyKey: "topology.kubernetes.io/zone"
          weight: 100
  replicas: 3
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

pohttp:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ pohttp ]
            topologyKey: "kubernetes.io/hostname"
          weight: 80
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ pohttp ]
            topologyKey: "topology.kubernetes.io/zone"
          weight: 100
  replicas: 3
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

cogrpc:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ cogrpc ]
            topologyKey: "kubernetes.io/hostname"
          weight: 80
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ cogrpc ]
            topologyKey: "topology.kubernetes.io/zone"
          weight: 100
  serviceAnnotations:
    cloud.google.com/app-protocols: '{"cogrpc":"HTTP2"}'
    service.alpha.kubernetes.io/app-protocols: '{"cogrpc":"HTTP2"}'
    cloud.google.com/neg: '{"ingress": true}'
    beta.cloud.google.com/backend-config: '{"ports":{"cogrpc":"cogrpc"}, "default": "cogrpc"}'
  replicas: 3
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

pdcQueue:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ pdcout ]
            topologyKey: "kubernetes.io/hostname"
          weight: 80
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ pdcout ]
            topologyKey: "topology.kubernetes.io/zone"
          weight: 100
  replicas: 6
  resources:
    requests:
      cpu: 15m
      memory: 50Mi
    limits:
      cpu: 25m
      memory: 64Mi

crcQueue:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ crcin ]
            topologyKey: "kubernetes.io/hostname"
          weight: 80
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [ relaynet-internet-gateway ]
                - key: app.kubernetes.io/component
                  operator: In
                  values: [ crcin ]
            topologyKey: "topology.kubernetes.io/zone"
          weight: 100
  replicas: 6
  resources:
    requests:
      cpu: 20m
      memory: 64Mi
    limits:
      cpu: 30m
      memory: 80Mi

# Backing services

objectStore:
  endpoint: minio:9000
  bucket: public-gateway
  tlsEnabled: false
  accessKeyId: gateway
  secretKey: {{ readFile "/workspace/secrets/minio-secret-key" | quote }}

mongo:
  uri: '{{ requiredEnv "GW_MONGODB_CONNECTION_URI" }}/?retryWrites=true&w=majority'
  db: {{ requiredEnv "GW_MONGODB_DB_NAME" | quote }}
  user: {{ requiredEnv "GW_MONGODB_USER_NAME" | quote }}
  password: {{ readFile "/workspace/secrets/gw-mongodb-password" | quote }}

vault:
  serverUrl: http://vault:8200
  token: {{ readFile "/workspace/secrets/vault-root-token" | quote }}

nats:
  serverUrl: nats://nats:4222
  clusterId: stan
