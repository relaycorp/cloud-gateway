version: "1.0"
stages:
  - clone
  - deploy
steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"
    git: "github"
    stage: "clone"

  deploy:
    title: "Deploy Vault with Helm"
    type: helm
    stage: deploy
    arguments:
      action: install
      chart_name: vault
      chart_version: 0.8.0
      chart_repo_url: https://helm.releases.hashicorp.com
      release_name: main
      helm_version: 3.3.1
      kube_context: ${{KUBERNETES_CONTEXT}}
      custom_value_files:
        - cloud-gateway/charts/defaults/vault.yml
      custom_values:
        - server_extraEnvironmentVars_GOOGLE__PROJECT=${{GCP_PROJECT_ID}}

  configure:
    title: Configure Vault
    type: freestyle
    stage: deploy
    image: codefresh/kubectl:1.18.2
    commands:
      - cloud-gateway/cf-pipelines/scripts/post-install.sh "${{KEYBASE_USERNAME}}" "${{VAULT_KV_PREFIX}}"
      - cf_export VAULT_INIT_PRESENT="$(find . -name vault-init.asc -maxdepth 1 -exec echo true \;)"

  retrieve_service_account_credentials:
    title: Retrieve service account credentials
    type: freestyle
    stage: deploy
    image: codefresh/kubectl:1.18.2
    commands:
      - kubectl get secret vault-cd -o "jsonpath={.data['service_account_key\.json']}" | base64 --decode > sensitive/vault-gcp-creds.json
    when:
      condition:
        all:
          vaultInitIsPresent: "'${{VAULT_INIT_PRESENT}}' == 'true'"

  retrieve_bucket_name:
    title: Retrieve Vault bucket name
    type: freestyle
    stage: deploy
    image: codefresh/kubectl:1.18.2
    commands:
      - cf_export VAULT_BUCKET="$(kubectl get cm vault-config -o 'jsonpath={.data.bucket}')"
    when:
      condition:
        all:
          vaultInitIsPresent: "'${{VAULT_INIT_PRESENT}}' == 'true'"

  upload_vault_keys:
    title: Upload Vault keys
    type: freestyle
    stage: deploy
    image: google/cloud-sdk:318.0.0-alpine
    commands:
      - gcloud auth activate-service-account --key-file=sensitive/vault-gcp-creds.json
      - gcloud components install gsutil
      - gsutil cp vault-init.asc "gs://${{VAULT_BUCKET}}/relaycorp/vault-init.asc"
    when:
      condition:
        all:
          vaultInitIsPresent: "'${{VAULT_INIT_PRESENT}}' == 'true'"

hooks:
  on_finish:
    exec:
      image: alpine
      commands:
        - rm -f vault-init.asc
